---
layout: post
title:  "图解排序 3/10 - 希尔排序"
date:   2019-04-03 09:28:47 +0800
categories: jekyll update
---

> 本文首次发表于超越技术公众号 [图解排序 3/10 - 希尔排序](https://mp.weixin.qq.com/s?__biz=MzUzMTk3ODc0OA==&mid=2247483834&idx=1&sn=d91d9d354d765da8bece9c06510f3a5d&chksm=fabb0129cdcc883f5c48e76a7690b4fe698415827c82c8ef4c8482a8618fdff05258f13eff03&token=623725354&lang=zh_CN#rd)



希尔排序，它是由 D.L.Shell 于1959 年提出而得名。根据它的名字很难想象算法的核心思想。[ 所以只能死记硬背了，面试官问：希尔排序的思想是什么？]。它的核心思想是把一个序列分组，对分组后的内容进行[**插入排序**](http://mp.weixin.qq.com/s?__biz=MzUzMTk3ODc0OA==&mid=2247483828&idx=1&sn=d8f0675f4e54e3b273c90c59be54eaeb&chksm=fabb0127cdcc883158bb0791f26cae1ea8494b496744f802b22babb4c03eaaef25e98dfbff57&scene=21#wechat_redirect)，这里的分组只是逻辑上的分组，不会重新开辟存储空间。它其实是插入排序的优化版，插入排序对基本有序的序列性能好，希尔排序利用这一特性把原序列分组，对每个分组进行排序，逐步完成排序。

## 希尔排序

以 arr = [ 8, 1, 4, 6, 2, 3, 5, 7 ] 为例，通过 floor(8/2) 来分为 4 组，8 表示数组中元素的个数。分完组后，对组内元素进行插入排序。



「 第1次分组 」

![img](https://github.com/lefex/LeetCodeGraphically/blob/master/assets/images/3-shell/all.020.jpeg?raw=true)

「 利用第 1 次分组结果进行第 2 次分组 」

![img](https://github.com/lefex/LeetCodeGraphically/blob/master/assets/images/3-shell/all.021.jpeg?raw=true)

「 利用第 2 次分组结果进行最后一次分组 」

![img](https://github.com/lefex/LeetCodeGraphically/blob/master/assets/images/3-shell/all.022.jpeg?raw=true)

## 特点

稳定性：它可能会把相同元素分到不同的组中，那么两个相同的元素就有可能调换相对位置，故不稳定。

空间复杂度：由于整个排序过程是在原数据上进行操作，故为 O(1);

时间复杂度：

> 希尔排序的时间复杂度与增量序列的选取有关，例如希尔增量时间复杂度为O(n²)，而Hibbard增量的希尔排序的时间复杂度为O(log n的3/2)，希尔排序时间复杂度的下界是n*log2n
>
> 百度百科

## 感想

希尔排序在整个过程中，分组方式为：group = length/2,  group/2 ...... 1，直到只能分一组，在整个分组过程中使元素逐渐变得有序，这样使用插入排序的时候就不需要移动大量元素，比如一个逆序序列 arr = [6, 5, 4, 4, 2, 1]，采用插入排序每次需要移动大量元素，如果换成希尔排序移动次数就会减少。希尔排序一个有意思的点是采用不同方式进行分组（上面提到的是采用的希尔增量分组），时间复杂度会有所不同，有兴趣的读者可以了解下其它分组方式。

**代码实现请前往 GitHub 项目[LeetCodeGraphically](https://github.com/lefex/LeetCodeGraphically)**



## 推荐阅读：

[编程的背后](http://mp.weixin.qq.com/s?__biz=MzUzMTk3ODc0OA==&mid=2247483806&idx=1&sn=b85f43e846e96433755c7dc6adc1d033&chksm=fabb010dcdcc881b242ad387e6da4ea4174b99f5423d7bed11cc07dcd2af92f3ac00ebfc4ee8&scene=21#wechat_redirect)



<img style="border-radius: 30px" src="https://github.com/lefex/LeetCodeGraphically/blob/master/images/cyjs_qr.png?raw=true" title="lefex" width="200"/>



