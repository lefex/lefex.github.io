---
layout: post
title:  "图解排序 10/10 - 选择排序"
date:   2019-04-10 09:28:47 +0800
categories: jekyll update
---

> 本文首次发表于超越技术公众号 [图解排序 10/10 - 选择排序](https://mp.weixin.qq.com/s?__biz=MzUzMTk3ODc0OA==&mid=2247483897&idx=1&sn=8fd337d568a9f56fd1e926fb1012565c&chksm=fabb016acdcc887ce4f0e438a4fb2704c62cf4996a0abda2f2f2f6a629d52aef3be01df46010&scene=21#wechat_redirect)



选择排序的思想是，依次从「无序列表」中找到一个最小的元素放到「有序列表」的最后面。以 arr = [ 8, 1, 4, 6, 2, 3, 5, 4 ] 为例，排序开始时把 arr 分为有序列表 A = [ ], 无序列表 B = [ 8, 1, 4, 6, 2, 3, 5, 4 ]，依次从 B 中找出最小的元素放到 A 的最后面。这种排序也是逻辑上的分组，实际上不会创建 A 和 B，只是用下标来标记 A 和 B。



## 选择排序

以 arr = [ 8, 1, 4, 6, 2, 3, 5, 4 ] 为例，第一次找到最小元素 1 与 8 进行交换，这时有列表 A = [1], 无序列表 B = [8, 4, 6, 2, 3, 5, 4]；第二次从 B 中找到最小元素 2，与 B 中的第一个元素进行交换，交换后 A = [1，2]，B = [4, 6, 8, 3, 5, 4]；就这样不断缩短 B，扩大 A，最终达到有序。

![img](https://github.com/lefex/LeetCodeGraphically/blob/master/assets/images/2-xuanze/all.011.jpeg?raw=true)

## 特点

稳定性：排序过程中元素是按顺序进行遍历，相同元素相对位置不会发生变化，故稳定。

空间复杂度：在原序列进行操作，故为 O( 1 );

  时间复杂度：需要 2 次循环遍历，故为 O( n * n );



## 感想

选择排序与冒泡排序，插入排序都属于同一思想排序，这种排序算法思想简单，往往会用于其它复杂排序算法的子序列排序。



**代码实现请前往 GitHub 项目[LeetCodeGraphically](https://github.com/lefex/LeetCodeGraphically)**



## 推荐阅读：

[编程的背后](http://mp.weixin.qq.com/s?__biz=MzUzMTk3ODc0OA==&mid=2247483806&idx=1&sn=b85f43e846e96433755c7dc6adc1d033&chksm=fabb010dcdcc881b242ad387e6da4ea4174b99f5423d7bed11cc07dcd2af92f3ac00ebfc4ee8&scene=21#wechat_redirect)



<img style="border-radius: 30px" src="https://github.com/lefex/LeetCodeGraphically/blob/master/images/cyjs_qr.png?raw=true" title="lefex" width="200"/>



