---
layout: post
title:  "图解排序 8/10 - 桶排序"
date:   2019-04-08 09:28:47 +0800
categories: jekyll update
---

> 本文首次发表于超越技术公众号 [图解排序 8/10 - 桶排序](https://mp.weixin.qq.com/s?__biz=MzUzMTk3ODc0OA==&mid=2247483894&idx=1&sn=050c2d219cc16021db0f6cec83045257&chksm=fabb0165cdcc88737c673df3424b615e0e64cc5a0501d9c97cd26bfcff651a60a2d19a43f585&scene=21#wechat_redirect)



上一篇计数排序也是一种桶排序。桶排序的核心思想是把数据分到若干个“桶”中，对“桶”中的元素进行排序，最终把“桶”中已排序好的数据合并为一个有序序列。



## 桶排序

以 arr = [ 8, 1, 4, 6, 2, 3, 5, 7 ] 为例，排序前需要确定桶的个数，和确定桶中元素的取值范围：



![img](https://github.com/lefex/LeetCodeGraphically/blob/master/assets/images/8-tong/all.059.jpeg?raw=true)

![img](https://github.com/lefex/LeetCodeGraphically/blob/master/assets/images/8-tong/all.060.jpeg?raw=true)

![img](https://github.com/lefex/LeetCodeGraphically/blob/master/assets/images/8-tong/all.061.jpeg?raw=true)



![img](https://github.com/lefex/LeetCodeGraphically/blob/master/assets/images/8-tong/all.062.jpeg?raw=true)

![img](https://github.com/lefex/LeetCodeGraphically/blob/master/assets/images/8-tong/all.063.jpeg?raw=true)

![img](https://github.com/lefex/LeetCodeGraphically/blob/master/assets/images/8-tong/all.064.jpeg?raw=true)



## 特点

稳定性：在元素拆分的时候，相同元素会被分到同一组中，合并的时候也是按顺序合并，故稳定。

空间复杂度：桶的个数加元素的个数，为 O ( n + k );

  时间复杂度：最好为 O( n + k )，最坏为 O（n * n）;



## 感想

计数排序和桶排序的思想都是把数据进行拆分，然后把数据放到不同的桶中，对桶中的元素进行排序，最终合并桶。



**代码实现请前往 GitHub 项目[LeetCodeGraphically](https://github.com/lefex/LeetCodeGraphically)**



## 推荐阅读：

[编程的背后](http://mp.weixin.qq.com/s?__biz=MzUzMTk3ODc0OA==&mid=2247483806&idx=1&sn=b85f43e846e96433755c7dc6adc1d033&chksm=fabb010dcdcc881b242ad387e6da4ea4174b99f5423d7bed11cc07dcd2af92f3ac00ebfc4ee8&scene=21#wechat_redirect)



<img style="border-radius: 30px" src="https://github.com/lefex/LeetCodeGraphically/blob/master/images/cyjs_qr.png?raw=true" title="lefex" width="200"/>



